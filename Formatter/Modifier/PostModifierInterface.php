<?php

/**
 * This file is part of the RollerworksRecordFilterBundle.
 *
 * (c) Rollerscapes
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @link    http://projects.rollerscapes.net/RollerFramework
 * @license http://www.opensource.org/licenses/lgpl-license.php LGPL
 */

namespace Rollerworks\RecordFilterBundle\Formatter\Modifier;

use Rollerworks\RecordFilterBundle\FilterStruct;
use Rollerworks\RecordFilterBundle\Formatter\FilterConfig;
use Rollerworks\RecordFilterBundle\Formatter\FormatterInterface;

/**
 * Post modifier interface.
 *
 * Must be in implemente in the Formatter Post modifier.
 *
 * @author Sebastiaan Stok <s.stok@rollerscapes.net>
 */
interface PostModifierInterface
{
    /**
     * Returns the name of the modifier.
     * This would normally be the class-name in lowercase and underscored.
     *
     * @return string
     */
    public function getModifierName();

    /**
     * Modify the filters by object reference.
     * Return null to remove the filter from the final result.
     *
     * @param \Rollerworks\RecordFilterBundle\Formatter\FormatterInterface  $formatter
     * @param \Rollerworks\RecordFilterBundle\Formatter\FilterConfig        $filterConfig
     * @param \Rollerworks\RecordFilterBundle\FilterStruct                  $filterStruct
     * @param integer                                                       $groupIndex Group the filter is in
     * @return integer[]
     */
    public function modFilters(FormatterInterface $formatter, FilterConfig $filterConfig, FilterStruct $filterStruct, $groupIndex);

    /**
     * Return messages that where generated by the modifier.
     * Should return at least an empty array.
     *
     * The message should be either an transchoise string or an array as: [message, [params]]
     * [params] is an associative array containg the paramaters as %key% => value
     *
     * By default the following placeholders are available.
     * * %field%: Current field's label
     * * %group%: Current group (starting with 1)
     *
     * @return array
     */
    public function getMessages();
}